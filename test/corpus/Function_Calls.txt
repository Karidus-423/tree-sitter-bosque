==============================
Simple Call
==============================

function foo(): Int {
	return 1i; 
} 

function main(): Int {
	return foo(); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters))))))))

==============================
Simple Call with Arguments
==============================

function foo(x: Int, y: Int): Int {
	return x + y; 
} 

function main(): Int {
	return foo(1i, 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)
                (num_whole)))))))))

==============================================================
Simple Call with Accessing Arguments Ordered
==============================================================

function foo(x: Int, y: Int): Int {
	return x + y; 
} 

function main(): Int {
	return foo(x = 1i, y = 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))))))))))

==============================================================
Simple Call with Accessing Arguments Unordered
==============================================================

function foo(x: Int, y: Int): Int {
	return x + y; 
}

function main(): Int {
	return foo(y = 0i, x = 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))))))))))

===============================
Function Call with Scoping
===============================

function foo(x: Int, y: Int): Int {
	return x + y; 
} 

function main(): Int {
	var x: Int = 0i;
	return foo(y = x, x = x); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (variable_statement
            (variable_expression
              (variable_signature
                (identifier)
                (primitive_type))
              (variable_assignment
                (num_whole))))
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (identifier)))
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (identifier)))))))))))

========================================
Function Call with Accessing Mixed 󰀫
========================================

function foo(x: Int, y: Int): Int {
	return x + y; 
}

function main(): Int {
	return foo(y = 1i, 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))
                (num_whole)))))))))

========================================
Function Call with Accessing Mixed 󰂡
========================================

function foo(x: Int, y: Int): Int {
	return x + y; 
}

function main(): Int {
	return foo(1i, x = 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))))))))))

========================================
Function Call with Accessing Mixed 󱃮
========================================

function foo(x: Int, y: Int): Int {
	return x + y; 
}

function main(): Int {
	return foo(x = 1i, 2i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))
                (num_whole)))))))))

========================================
Function Call with Rest
========================================

function foo(x: Int, ...y: List<Int>): Int {
	return x; 
} 

function main(): Int {
	return foo(3i, x = 1i, 33i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type)))
        (variable_expression
          (variable_signature
            (identifier
              (modifier))
            (list_type
              (type_params
                (primitive_type))))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (identifier))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)
                (variable_expression
                  (variable_signature
                    (identifier))
                  (variable_assignment
                    (num_whole)))
                (num_whole)))))))))

========================================
Function Call with Ref
========================================

function foo(ref x: Int): Int {
	return 1i; 
} 

function main(): Int {
	var y: Int = 0i;
	return foo(ref y); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier
              (modifier))
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (variable_statement
            (variable_expression
              (variable_signature
                (identifier)
                (primitive_type))
              (variable_assignment
                (num_whole))))
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (identifier
                  (modifier))))))))))

========================================
Function Call with Defaults
========================================

function foo(x: Int = 3i, y: Int = $x + 1i): Int {
	return x + y; 
} 

function main(): Int {
	return foo(1i, 2i);
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))
          (variable_assignment
            (num_whole)))
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))
          (variable_assignment
            (binary_expression
              (identifier
                (modifier))
              (num_whole)))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (binary_expression
              (identifier)
              (identifier)))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)
                (num_whole)))))))))

==================================
Function Call Pre
==================================

function foo(x: Int): Int requires x > 0i; {
	return 1i; 
}

function main(): Int {
	return foo(1i); 
}

----

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type)
        (pre_condition
          (binary_expression
            (identifier)
            (num_whole))))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)))))))))

==================================
Function Call Pre Multiple
==================================

function foo(x: Int): Int requires x > 0i; requires x > 1i; {
	return 1i; 
}

function main(): Int {
	return foo(1i); 
}

----

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type)
        (pre_condition
          (binary_expression
            (identifier)
            (num_whole)))
        (pre_condition
          (binary_expression
            (identifier)
            (num_whole))))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)))))))))

==================================
Function Call Post
==================================

function foo(x: Int): Int ensures $return > 0i; {
	return 1i; 
}
function main(): Int {
	return foo(1i); 
}

----

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type)
        (post_condition
          (binary_expression
            (identifier
              (modifier))
            (num_whole))))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)))))))))

==================================
Function Call Post Multiple
==================================

function foo(x: Int): Int ensures $return > 0i; ensures $return > 1i; {
	return 1i; 
}

function main(): Int {
	return foo(1i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type)
        (post_condition
          (binary_expression
            (identifier
              (modifier))
            (num_whole)))
        (post_condition
          (binary_expression
            (identifier
              (modifier))
            (num_whole))))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)))))))))

==================================
Function Call Pre & Post
==================================

function foo(x: Int): Int requires x > 0i; ensures $return > 0i; {
	return 1i; 
}
function main(): Int {
	return foo(1i); 
}

---

(source_file
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier)
            (primitive_type))))
      (function_return_parameters
        (primitive_type)
        (pre_condition
          (binary_expression
            (identifier)
            (num_whole)))
        (post_condition
          (binary_expression
            (identifier
              (modifier))
            (num_whole))))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (num_whole)))))))))

==================================
Function Call Ref Params
==================================

entity Foo{ }

function foo(ref y: Foo): Int {
	return 1i; 
} 

function main(): Int {
	let ff = Foo{};
	return foo(ref ff); 
}

---

(source_file
  (entity_declaration
    (identifier)
    (object_body))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters
        (variable_expression
          (variable_signature
            (identifier
              (modifier))
            (identifier))))
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (return_statement
            (num_whole))))))
  (function_definition
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_usage
        (object_body
          (variable_statement
            (variable_expression
              (variable_signature
                (identifier))
              (variable_assignment
                (object_creation
                  (identifier)))))
          (return_statement
            (function_call
              (identifier)
              (function_call_parameters
                (identifier
                  (modifier))))))))))
