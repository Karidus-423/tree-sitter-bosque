=========================================
Simple Lambda
=========================================

function foo(f: fn(Int) -> Int): Int {
	return f(1i); 
}

function main(): Bool {
	return foo(fn(x: Int): Int => x + 1i); 
}

---

(source_file
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (primitive_type)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (num_whole))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (binary_expression
              (lambda_expression
                (identifier)
                (primitive_type)
                (function_return_parameters
                  (primitive_type))
                (identifier))
              (num_whole))))))))

=========================================
Simple Lambda Infer Argument
=========================================

function foo(f: fn(Int) -> Int): Int {
	return f(1i); 
} 
function main(): Bool {
	return foo(fn(x): Int => { return x + 1i; }); 
}

---

(source_file
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (primitive_type)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (num_whole))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier)
              (function_return_parameters
                (primitive_type))
              (function_body
                (return_statement
                  (binary_expression
                    (identifier)
                    (num_whole)))))))))))

=========================================
Simple Lambda with Return
=========================================

function foo(f: fn(Int) -> Int): Int {
	return f(1i); 
} 

function main(): Bool {
	return foo(fn(x: Int) => { return x + 1i; });
}

---

(source_file
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (primitive_type)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (num_whole))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier)
              (primitive_type)
              (function_body
                (return_statement
                  (binary_expression
                    (identifier)
                    (num_whole)))))))))))

=========================================
Simple Lambda Infer Both
=========================================

function foo(f: fn(Int) -> Int): Int {
	return f(1i); 
} 

function main(): Bool {
	return foo(fn(x) => { return x + 1i; });
}

---

(source_file
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (primitive_type)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (num_whole))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier)
              (function_body
                (return_statement
                  (binary_expression
                    (identifier)
                    (num_whole)))))))))))

=========================================
Simple Lambda Capture
=========================================

function foo(f: fn(Int) -> Int): Int {
	return f(1i); 
} 

function main(): Bool {
	let y = 1i;
	return foo(fn(x) => { return x + y; }); 
}

---

(source_file
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (primitive_type)
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (num_whole))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (variable_statement
          (variable_expression
            (variable_definition
              (identifier))
            (num_whole)))
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier)
              (function_body
                (return_statement
                  (binary_expression
                    (identifier)
                    (identifier)))))))))))

=========================================
Simple Lambda Reference Full
=========================================

entity Foo {
	field v: Int;
}

function foo(f: fn(ref Foo) -> Int): Int {
	let x = Foo{ 1i };
	return f(ref x);
} 

function main(): Bool {
	return foo(fn(ref x: Foo): Int => x.v); 
}

---

(source_file
  (entity
    (identifier)
    (field
      (identifier)
      (primitive_type)))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (identifier
              (modifier))
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (variable_statement
          (variable_expression
            (variable_definition
              (identifier))
            (entity_definition
              (identifier)
              (num_whole))))
        (return_statement
          (function_call
            (identifier)
            (identifier
              (modifier)))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier
                (modifier))
              (identifier)
              (function_return_parameters
                (primitive_type))
              (entity_access
                (identifier)))
            (identifier)))))))

=========================================
Simple Lambda Reference Infer
=========================================

entity Foo {
	field v: Int; 
} 

function foo(f: fn(ref Foo) -> Int): Int {
	let x = Foo{ 1i };
	return f(ref x);
}

function main(): Bool {
	return foo(fn(ref x) => { return x.v; });
}

---

(source_file
  (entity
    (identifier)
    (field
      (identifier)
      (primitive_type)))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters
        (function_param_signature
          (identifier)
          (lambda_type
            (identifier)
            (identifier
              (modifier))
            (primitive_type))))
      (function_return_parameters
        (primitive_type))
      (function_body
        (variable_statement
          (variable_expression
            (variable_definition
              (identifier))
            (entity_definition
              (identifier)
              (num_whole))))
        (return_statement
          (function_call
            (identifier)
            (identifier
              (modifier)))))))
  (function_definition
    (function_modifier)
    (function_signature
      (identifier)
      (function_parameters)
      (function_return_parameters
        (primitive_type))
      (function_body
        (return_statement
          (function_call
            (identifier)
            (lambda_expression
              (identifier
                (modifier))
              (function_body
                (return_statement
                  (entity_access
                    (identifier))
                  (identifier))))))))))

=========================================
Parenthesized Lambda
=========================================

(fn(b: Body): Float => b.kineticEnergy())

---


